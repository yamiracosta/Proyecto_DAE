/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Presentacion;

import Negocio.Asistencia;
import Negocio.Beneficio;
import Negocio.Contrato;
import Negocio.Empleado;
import Negocio.Permiso;
import Negocio.TipoPermiso;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import com.toedter.calendar.IDateEvaluator;
import com.toedter.calendar.JCalendar;
import java.awt.Color;

/**
 *
 * @author jefer
 */
public class jdGestionFechaVacaciones extends javax.swing.JDialog {

    Empleado objE = new Empleado();
    TipoPermiso objTP = new TipoPermiso();
    Permiso objPerm = new Permiso();
    Contrato objC = new Contrato();
    Asistencia objA = new Asistencia();

    public jdGestionFechaVacaciones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnVolver5 = new btn_efecto01_jwc.btn_efecto_V1_JWC();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtNumDocEmpleado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleados = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lblPerMaxPerm = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblPerTmpDisp = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dchsrFechainiVacas = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblFecIniCont = new javax.swing.JLabel();
        lblFecFinCont = new javax.swing.JLabel();
        lblFechaTerminoVacas = new javax.swing.JLabel();
        btnVerificarVacaciones = new btn_efecto01_jwc.btn_efecto_V1_JWC();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPermisos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("GESTION DE FECHA DE VACACIONES");

        btnVolver5.setBackground(new java.awt.Color(255, 255, 255));
        btnVolver5.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton-x.png"))); // NOI18N
        btnVolver5.setText("");
        btnVolver5.setBackground_Hover_1(new java.awt.Color(255, 51, 51));
        btnVolver5.setBackground_Hover_2(new java.awt.Color(204, 0, 0));
        btnVolver5.setBackground_No_Hover_1(new java.awt.Color(255, 51, 51));
        btnVolver5.setBackground_No_Hover_2(new java.awt.Color(204, 0, 0));
        btnVolver5.setEsquina_inferior_derecho(20);
        btnVolver5.setEsquina_inferior_izquierdo(20);
        btnVolver5.setEsquina_superior_derecho(20);
        btnVolver5.setEsquina_superior_izquierdo(20);
        btnVolver5.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnVolver5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVolver5.setIconTextGap(8);
        btnVolver5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver5ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(69, 161, 137));

        jLabel6.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Ingrese número de documento:");

        txtNumDocEmpleado.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        txtNumDocEmpleado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtNumDocEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumDocEmpleadoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumDocEmpleadoKeyTyped(evt);
            }
        });

        tblEmpleados.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        tblEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblEmpleados.setGridColor(new java.awt.Color(0, 0, 0));
        tblEmpleados.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblEmpleados.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpleadosMouseClicked(evt);
            }
        });
        tblEmpleados.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblEmpleadosPropertyChange(evt);
            }
        });
        tblEmpleados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblEmpleadosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmpleados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addComponent(txtNumDocEmpleado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNumDocEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel7.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Periodo de tiempo máximo permitido:");

        lblPerMaxPerm.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        lblPerMaxPerm.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Periodo de tiempo disponible:");

        lblPerTmpDisp.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        lblPerTmpDisp.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Fecha de inicio:");

        dchsrFechainiVacas.setEnabled(false);
        dchsrFechainiVacas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dchsrFechainiVacasPropertyChange(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Fecha de término:");

        jLabel12.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Fecha de inicio de contrato:");

        jLabel13.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Fecha de término de contrato:");

        lblFecIniCont.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        lblFecIniCont.setForeground(new java.awt.Color(255, 255, 255));

        lblFecFinCont.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        lblFecFinCont.setForeground(new java.awt.Color(255, 255, 255));

        lblFechaTerminoVacas.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        lblFechaTerminoVacas.setForeground(new java.awt.Color(255, 255, 255));

        btnVerificarVacaciones.setBackground(new java.awt.Color(51, 102, 0));
        btnVerificarVacaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/btn_asistencia.png"))); // NOI18N
        btnVerificarVacaciones.setText("Verificar fecha");
        btnVerificarVacaciones.setBackground_Hover_1(new java.awt.Color(51, 102, 0));
        btnVerificarVacaciones.setBackground_Hover_2(new java.awt.Color(51, 102, 0));
        btnVerificarVacaciones.setBackground_No_Hover_1(new java.awt.Color(255, 204, 0));
        btnVerificarVacaciones.setBackground_No_Hover_2(new java.awt.Color(255, 204, 0));
        btnVerificarVacaciones.setColor_NoHover_text(new java.awt.Color(0, 0, 0));
        btnVerificarVacaciones.setEnabled(false);
        btnVerificarVacaciones.setEsquina_inferior_derecho(20);
        btnVerificarVacaciones.setEsquina_inferior_izquierdo(20);
        btnVerificarVacaciones.setEsquina_superior_derecho(20);
        btnVerificarVacaciones.setEsquina_superior_izquierdo(20);
        btnVerificarVacaciones.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnVerificarVacaciones.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVerificarVacaciones.setIconTextGap(8);
        btnVerificarVacaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarVacacionesActionPerformed(evt);
            }
        });
        btnVerificarVacaciones.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                btnVerificarVacacionesPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFecFinCont, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFecIniCont, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(lblPerMaxPerm, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(65, 65, 65)
                        .addComponent(lblPerTmpDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 125, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(lblFechaTerminoVacas, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(dchsrFechainiVacas, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnVerificarVacaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPerMaxPerm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dchsrFechainiVacas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPerTmpDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFechaTerminoVacas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFecIniCont, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFecFinCont, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnVerificarVacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );

        jPanel5.setBackground(new java.awt.Color(69, 161, 137));

        jLabel11.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Permisos (asegurarse de que la fecha solicitada no se cruce con otros permisos pendientes o aprobados):");

        tblPermisos.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        tblPermisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPermisos.setGridColor(new java.awt.Color(0, 0, 0));
        tblPermisos.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblPermisos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblPermisos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPermisosMouseClicked(evt);
            }
        });
        tblPermisos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblPermisosPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(tblPermisos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnVolver5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolver5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolver5ActionPerformed

    private void txtNumDocEmpleadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumDocEmpleadoKeyReleased
        try {
            listarEmpleadosConContratoVigenteYVacacionesPagadas();
        } catch (Exception ex) {
            Logger.getLogger(jdGestionFechaVacaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtNumDocEmpleadoKeyReleased

    private void listarEmpleadosConContratoVigenteYVacacionesPagadas() throws Exception {

        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("Número de documento");
        modelo.addColumn("Tipo de documento");
        modelo.addColumn("Apellido paterno");
        modelo.addColumn("Apellido materno");
        modelo.addColumn("Nombres");
        modelo.addColumn("Tipo de empleado");
        modelo.addColumn("Área");

        String nombre = txtNumDocEmpleado.getText();
        ResultSet rs = objE.filtrarEmpleadoConContratoVigenteYVacacionesPagadas(nombre);

        Object datos[] = new Object[7];

        while (rs.next()) {
            datos[0] = rs.getString("numdocumento");
            datos[1] = rs.getString("nombretipodoc");
            datos[2] = rs.getString("ape_paterno");
            datos[3] = rs.getString("ape_materno");
            datos[4] = rs.getString("nombres");
            datos[5] = rs.getString("nombretipoempleado");
            datos[6] = rs.getString("nombrearea");
            modelo.addRow(datos);
        }
        tblEmpleados.setModel(modelo);

    }

    private void txtNumDocEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumDocEmpleadoKeyTyped
        if (txtNumDocEmpleado.getText().length() >= 20) {
            evt.consume();
        }
        limpiarTodo();
    }//GEN-LAST:event_txtNumDocEmpleadoKeyTyped

    private void tblEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpleadosMouseClicked
        try {
            if (tblEmpleados.getSelectedRowCount() > 0) {
                obtenerMaxDiasVacas();
                obtenerCantDiasDisp();
                int idempl = obtenerIdEmpleado();
                int diasrestantes = Integer.valueOf(lblPerTmpDisp.getText().replace(" días", ""));
                if (diasrestantes <= 1) {
                    setearFechasContrato();
                    listarPermisosEmpleado(idempl);
                    lblPerTmpDisp.setText("0 días");
                    JOptionPane.showMessageDialog(rootPane, "El empleado ya tiene periodos de vacaciones asignadas");
                } else {
                    setearFechasContrato();
                    setearFechaIniVacas(lblFecIniCont, lblFecFinCont);
                    deshabilitarFechasPrimerPeriodoVacas();
                    listarPermisosEmpleado(idempl);
                    btnVerificarVacaciones.setEnabled(true);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(jdControlAsistencia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblEmpleadosMouseClicked

    private void tblEmpleadosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblEmpleadosPropertyChange

    }//GEN-LAST:event_tblEmpleadosPropertyChange

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            listarEmpleadosConContratoVigenteYVacacionesPagadas();
        } catch (Exception ex) {
            Logger.getLogger(jdGestionFechaVacaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void tblPermisosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPermisosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPermisosMouseClicked

    private void tblPermisosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblPermisosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPermisosPropertyChange

    private void dchsrFechainiVacasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dchsrFechainiVacasPropertyChange
        if (dchsrFechainiVacas.getDate() != null) {
            try {
                validarFechaVacaciones();
            } catch (ParseException ex) {
                Logger.getLogger(jdGestionFechaVacaciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblFechaTerminoVacas.setText("");

        }
    }//GEN-LAST:event_dchsrFechainiVacasPropertyChange

    private void btnVerificarVacacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarVacacionesActionPerformed
        try {
            SimpleDateFormat formato = new SimpleDateFormat("dd MMM yyyy");
            //Casteamos la fecha de inicio
            Date fechautilini = dchsrFechainiVacas.getDate();
            java.sql.Date fechaini = new java.sql.Date(fechautilini.getTime());
            //Casteamos la fecha de fin
            Date fechautilfin = formato.parse(lblFechaTerminoVacas.getText());
            java.sql.Date fechafin = new java.sql.Date(fechautilfin.getTime());
            int idEmp = obtenerIdEmpleado();
            boolean existecruce = objPerm.existeCrucePermisos(idEmp, fechaini, fechafin);
            if (existecruce) {
                JOptionPane.showMessageDialog(rootPane, "El rango de fechas se cruza con los permisos del empleado. Por favor, elija otro rango de fechas",
                        "Cruce de fechas", JOptionPane.ERROR_MESSAGE);
            } else {
                int opcion = JOptionPane.showConfirmDialog(rootPane, "Fecha disponible\n\n¿Registrar periodo de vacaciones?", "Confirmar registro",
                        JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    boolean exito = objA.actualizarAsistenciaVacaciones(idEmp, fechaini, fechafin);
                    if (exito) {
                        limpiarTodo();
                    JOptionPane.showMessageDialog(rootPane, "Periodo de vacaciones registrado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Error al registrar periodo de vacaciones");
                    }
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(jdGestionFechaVacaciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(jdGestionFechaVacaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVerificarVacacionesActionPerformed

    private void btnVerificarVacacionesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_btnVerificarVacacionesPropertyChange

    }//GEN-LAST:event_btnVerificarVacacionesPropertyChange

    private void tblEmpleadosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblEmpleadosKeyReleased
        try {
            if (tblEmpleados.getSelectedRowCount() > 0) {
                obtenerMaxDiasVacas();
                obtenerCantDiasDisp();
                int idempl = obtenerIdEmpleado();
                int diasrestantes = Integer.valueOf(lblPerTmpDisp.getText().replace(" días", ""));
                if (diasrestantes <= 1) {
                    setearFechasContrato();
                    listarPermisosEmpleado(idempl);
                    lblPerTmpDisp.setText("0 días");
                    JOptionPane.showMessageDialog(rootPane, "El empleado ya tiene periodos de vacaciones asignadas");
                } else {
                    setearFechasContrato();
                    setearFechaIniVacas(lblFecIniCont, lblFecFinCont);
                    deshabilitarFechasPrimerPeriodoVacas();
                    listarPermisosEmpleado(idempl);
                    btnVerificarVacaciones.setEnabled(true);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(jdControlAsistencia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblEmpleadosKeyReleased

    private void obtenerMaxDiasVacas() throws Exception {
        int maxdias = objTP.obtenerDiasVacas();
        lblPerMaxPerm.setText(String.valueOf(maxdias) + " días");
    }

    private void obtenerCantDiasDisp() throws Exception {
        int idempl = obtenerIdEmpleado();
        int diasdisp = objTP.obtenerDiasVacas()- objA.obtenerDiasVacasYaAsignadas(idempl) - 1;
        lblPerTmpDisp.setText(String.valueOf(diasdisp) + " días");
    }

    private void setearFechasContrato() throws Exception {
        int idempl = obtenerIdEmpleado();
        String fechas[] = objC.obtenerFechasContrato(idempl);
        lblFecIniCont.setText(convertirFecha(fechas[0]));
        lblFecFinCont.setText(convertirFecha(fechas[1]));
    }

    private String convertirFecha(String fechaStr) throws ParseException {
        // Define el formato de entrada
        SimpleDateFormat formatoEntrada = new SimpleDateFormat("dd-MM-yyyy");
        // Define el formato de salida
        SimpleDateFormat formatoSalida = new SimpleDateFormat("dd MMM yyyy");

        // Convierte la cadena de fecha a un objeto Date
        Date fecha = formatoEntrada.parse(fechaStr);

        // Convierte el objeto Date a una cadena en el nuevo formato
        return formatoSalida.format(fecha);
    }

    private void setearFechaIniVacas(JLabel fechainicont, JLabel fechafincont) throws ParseException, Exception {
        SimpleDateFormat formato = new SimpleDateFormat("dd MMM yyyy");
        String fecI, fecF;
        fecI = fechainicont.getText();
        fecF = fechafincont.getText();

        //Poner pecha mínima seleccionable la de la fecha de inicio de contrato
        Date fechaIniVacas = formato.parse(fecI);
        dchsrFechainiVacas.getJCalendar().setMinSelectableDate(fechaIniVacas);

        //Poner pecha máxima seleccionable la de la fecha de fin de contrato pero 1 mes menos
        Date fechaFinVacas = formato.parse(fecF);
        Calendar cal = Calendar.getInstance();
        cal.setTime(fechaFinVacas);
        cal.add(Calendar.MONTH, 1);
        fechaFinVacas = cal.getTime();
        dchsrFechainiVacas.getJCalendar().setMaxSelectableDate(fechaFinVacas);

        dchsrFechainiVacas.setEnabled(true);
    }
    
    private void deshabilitarFechasPrimerPeriodoVacas() throws Exception{
        //Deshabilitar fechas en el periodo de vacaciones ya establecido
        int idempl = obtenerIdEmpleado();
        String fechas[] = objA.obtenerFechasPrimerPeriodoVacas(idempl);
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

        if (fechas[0] != null && fechas[1] != null) {
            Date minDate = dateFormat.parse(fechas[0]);
            Date maxDate = dateFormat.parse(fechas[1]);
            DateEvaluator evaluator = new DateEvaluator(minDate, maxDate);
            JCalendar calendarEva = dchsrFechainiVacas.getJCalendar();
            calendarEva.getDayChooser().addDateEvaluator(evaluator);
        }
    }

    private void validarFechaVacaciones() throws ParseException {
        Date fechaIni = dchsrFechainiVacas.getDate(); //la fecha que selecciona el usuario

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fechaIni);
        calendar.add(Calendar.DAY_OF_MONTH, 15);
        Date fechaFin = calendar.getTime();

        SimpleDateFormat formatoLblFechaFV = new SimpleDateFormat("dd MMM yyyy");
        lblFechaTerminoVacas.setText(formatoLblFechaFV.format(fechaFin));
    }

    private void listarPermisosEmpleado(int idemp) throws Exception {
        SimpleDateFormat formatoSalida = new SimpleDateFormat("dd MMM yyyy");
        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Fecha de solicitud");
        modelo.addColumn("Tipo de permiso");
        modelo.addColumn("Descripción");
        modelo.addColumn("Fecha de inicio");
        modelo.addColumn("Fecha de término");
        modelo.addColumn("Estado de permiso");

        ResultSet rs = objPerm.listarPermisosEmpleado(idemp);

        Object datos[] = new Object[6];

        while (rs.next()) {
            datos[0] = formatoSalida.format(rs.getDate("fechasolicitud"));
            datos[1] = rs.getString("tipopermiso");
            datos[2] = rs.getString("descripcion");
            datos[3] = formatoSalida.format(rs.getDate("fechainicio"));
            datos[4] = formatoSalida.format(rs.getDate("fechatermino"));
            datos[5] = rs.getString("estadopermiso");
            if (datos[5].equals("P")) {
                datos[5] = "Pendiente";
            } else if (datos[5].equals("A")) {
                datos[5] = "Aprobado";
            } else if (datos[5].equals("T")) {
                datos[5] = "Culminado";
            } else if (datos[5].equals("R")) {
                datos[5] = "Rechazado";
            } 
            modelo.addRow(datos);
        }
        tblPermisos.setModel(modelo);

        TableColumn column = null;
        for (int i = 0; i < tblPermisos.getColumnModel().getColumnCount(); i++) {
            column = tblPermisos.getColumnModel().getColumn(i);

            // Asignar un ancho fijo a cada columna
            switch (i) {
                case 0 ->
                    column.setPreferredWidth(49);
                case 1 ->
                    column.setPreferredWidth(75);
                case 2 ->
                    column.setPreferredWidth(230);
                case 3 ->
                    column.setPreferredWidth(48);
                case 4 ->
                    column.setPreferredWidth(48);
            }
        }
    }

    private void limpiarTodo() {
        lblFecFinCont.setText("");
        lblFecIniCont.setText("");
        lblFechaTerminoVacas.setText("");
        lblPerMaxPerm.setText("");
        lblPerTmpDisp.setText("");
        dchsrFechainiVacas.setDate(null);
        dchsrFechainiVacas.setEnabled(false);
        btnVerificarVacaciones.setEnabled(false);
        limpiarTablaPermisos();
    }

    private void limpiarTablaPermisos() {
        DefaultTableModel model = new DefaultTableModel();
        tblPermisos.setModel(model);
    }

    private int obtenerIdEmpleado() throws Exception {
        String numdoc = tblEmpleados.getValueAt(tblEmpleados.getSelectedRow(), 0).toString();
        String tipodoc = tblEmpleados.getValueAt(tblEmpleados.getSelectedRow(), 1).toString();
        int idempl = objE.obtenerIdEmpleado(numdoc, tipodoc);
        return idempl;
    }

    class DateEvaluator implements IDateEvaluator {

        private final Date minDate;
        private final Date maxDate;

        public DateEvaluator(Date minDate, Date maxDate) {
            this.minDate = minDate;
            this.maxDate = maxDate;
        }

        @Override
        public boolean isSpecial(Date date) {
            return false;
        }

        @Override
        public Color getSpecialForegroundColor() {
            return null;
        }

        @Override
        public Color getSpecialBackroundColor() {
            return null;
        }

        @Override
        public String getSpecialTooltip() {
            return null;
        }

        @Override
        public boolean isInvalid(Date date) {
            return (date.equals(minDate) || date.after(minDate)) && (date.equals(maxDate) || date.before(maxDate));
        }

        @Override
        public Color getInvalidForegroundColor() {
            return Color.RED;
        }

        @Override
        public Color getInvalidBackroundColor() {
            return null;
        }

        @Override
        public String getInvalidTooltip() {
            return "Fecha fuera del rango permitido";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private btn_efecto01_jwc.btn_efecto_V1_JWC btnVerificarVacaciones;
    private btn_efecto01_jwc.btn_efecto_V1_JWC btnVolver5;
    private com.toedter.calendar.JDateChooser dchsrFechainiVacas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFecFinCont;
    private javax.swing.JLabel lblFecIniCont;
    private javax.swing.JLabel lblFechaTerminoVacas;
    private javax.swing.JLabel lblPerMaxPerm;
    private javax.swing.JLabel lblPerTmpDisp;
    private javax.swing.JTable tblEmpleados;
    private javax.swing.JTable tblPermisos;
    private javax.swing.JTextField txtNumDocEmpleado;
    // End of variables declaration//GEN-END:variables
}
